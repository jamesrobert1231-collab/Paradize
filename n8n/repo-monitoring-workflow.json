{
  "name": "Repository Monitoring with Prometheus",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 5
            }
          ]
        }
      },
      "id": "repo-trigger",
      "name": "Repo Monitor Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1.1,
      "position": [250, 200]
    },
    {
      "parameters": {
        "operation": "getMetrics",
        "workspaceId": "ws-12345678-abcd-1234-efgh-123456789012",
        "query": "up",
        "time": "={{$now.toISO()}}"
      },
      "id": "prometheus-metrics",
      "name": "Get Prometheus Metrics",
      "type": "n8n-nodes-base.prometheus",
      "typeVersion": 1,
      "position": [450, 200],
      "credentials": {
        "prometheusApi": {
          "id": "prometheus-credentials",
          "name": "Prometheus API"
        }
      }
    },
    {
      "parameters": {
        "operation": "getRepository",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize"
      },
      "id": "github-repo-info",
      "name": "Get Repository Info",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [450, 350],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "operation": "getMany",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize",
        "returnAll": false,
        "limit": 5,
        "state": "open"
      },
      "id": "github-pulls",
      "name": "Get Open PRs",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [650, 200],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_viren_agent",
        "prompt": "=Analyze repository health based on:\n\n**Infrastructure Status**:\n{{JSON.stringify($json.prometheus_data)}}\n\n**Repository Metrics**:\n- Stars: {{$json.repository.stargazers_count}}\n- Forks: {{$json.repository.forks_count}}\n- Open Issues: {{$json.repository.open_issues_count}}\n- Open PRs: {{$json.pull_requests.length}}\n\n**Recent Activity**:\n{{JSON.stringify($json.pull_requests)}}\n\nProvide a comprehensive health report with:\n1. Infrastructure stability assessment\n2. Repository activity analysis\n3. Risk factors and recommendations\n4. Next actions for CO team",
        "options": {}
      },
      "id": "viren-analysis",
      "name": "Viren Health Analysis",
      "type": "n8n-nodes-base.openAiAssistant",
      "typeVersion": 1,
      "position": [850, 250],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize",
        "title": "Health Report - {{$now.format('YYYY-MM-DD HH:mm')}}",
        "body": "={{$json.health_analysis}}\n\n---\n**Generated by Viren AI Assistant**\n**Report Type**: Repository Health & Infrastructure\n**Timestamp**: {{$now.format('YYYY-MM-DD HH:mm:ss')}}",
        "labels": ["health-report", "infrastructure", "viren", "co"]
      },
      "id": "create-health-issue",
      "name": "Create Health Report",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [1050, 250],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "channel": "#repo-health",
        "text": "=ðŸ“Š **Repository Health Report Generated**\n\n**Repository**: Paradize\n**Time**: {{$now.format('YYYY-MM-DD HH:mm')}}\n**Prometheus Status**: {{$json.prometheus_status}}\n**Open PRs**: {{$json.pull_requests.length}}\n**Open Issues**: {{$json.repository.open_issues_count}}\n\nðŸ“‹ **Full Report**: {{$json.health_report_url}}",
        "options": {}
      },
      "id": "slack-health-alert",
      "name": "Slack Health Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [1250, 250],
      "credentials": {
        "slackApi": {
          "id": "slack-credentials",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.repository.open_issues_count}}",
              "operation": "larger",
              "value2": 10
            }
          ]
        }
      },
      "id": "high-issues-alert",
      "name": "High Issues Alert",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 350]
    },
    {
      "parameters": {
        "functionCode": "// Prepare comprehensive data for analysis\nconst prometheusData = $json.data || {};\nconst repoData = $json.repository || {};\nconst pulls = $json.pull_requests || [];\n\n// Check if Prometheus is responding\nconst prometheusStatus = prometheusData.result && prometheusData.result.length > 0 ? 'healthy' : 'unhealthy';\n\nreturn {\n  prometheus_data: prometheusData,\n  prometheus_status: prometheusStatus,\n  repository: repoData,\n  pull_requests: pulls,\n  total_prs: pulls.length,\n  critical_issues: repoData.open_issues_count > 10 ? 'high' : 'normal'\n};"
      },
      "id": "prepare-health-data",
      "name": "Prepare Health Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 250]
    }
  ],
  "connections": {
    "Repo Monitor Trigger": {
      "main": [
        [
          {
            "node": "Get Prometheus Metrics",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Repository Info",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Open PRs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Prometheus Metrics": {
      "main": [
        [
          {
            "node": "Prepare Health Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Repository Info": {
      "main": [
        [
          {
            "node": "Prepare Health Data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Open PRs": {
      "main": [
        [
          {
            "node": "Prepare Health Data",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Prepare Health Data": {
      "main": [
        [
          {
            "node": "Viren Health Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "High Issues Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Viren Health Analysis": {
      "main": [
        [
          {
            "node": "Create Health Report",
            "type": "main",
            "index": 0
          },
          {
            "node": "Slack Health Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "instanceId": "repo-monitoring-workflow"
  }
}
