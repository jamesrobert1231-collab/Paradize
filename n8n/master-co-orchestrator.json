{
  "name": "Master CO Orchestrator - Viren AI",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "id": "master-trigger",
      "name": "Master CO Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1.1,
      "position": [250, 200]
    },
    {
      "parameters": {
        "operation": "getRepository",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize"
      },
      "id": "repo-status",
      "name": "Get Repository Status",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [450, 200],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "operation": "getMany",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize",
        "returnAll": false,
        "limit": 20,
        "state": "open"
      },
      "id": "all-issues",
      "name": "Get All Active Issues",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [450, 350],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "operation": "getMany",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize",
        "returnAll": false,
        "limit": 10,
        "state": "open"
      },
      "id": "active-prs",
      "name": "Get Active PRs",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [450, 500],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "operation": "getMetrics",
        "workspaceId": "ws-12345678-abcd-1234-efgh-123456789012",
        "query": "up",
        "time": "={{$now.toISO()}}"
      },
      "id": "infrastructure-check",
      "name": "Check Infrastructure Health",
      "type": "n8n-nodes-base.prometheus",
      "typeVersion": 1,
      "position": [650, 200],
      "credentials": {
        "prometheusApi": {
          "id": "prometheus-credentials",
          "name": "Prometheus API"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_viren_agent",
        "prompt": "=You are Viren, the CO AI Assistant. Analyze the complete state of the Paradize repository and provide a comprehensive CO strategy.\n\n**Repository Overview**:\n- Repository: {{$json.repository.full_name}}\n- Stars: {{$json.repository.stargazers_count}}\n- Forks: {{$json.repository.forks_count}}\n- Open Issues: {{$json.issues_count}}\n- Open PRs: {{$json.prs_count}}\n\n**Current Issues**:\n{{JSON.stringify($json.issues_summary)}}\n\n**Active PRs**:\n{{JSON.stringify($json.prs_summary)}}\n\n**Infrastructure Status**:\n{{JSON.stringify($json.infrastructure_status)}}\n\n**Generate a comprehensive CO report including**:\n1. Repository health score (0-100)\n2. Priority action items\n3. Technical debt assessment\n4. Security recommendations\n5. Performance optimization opportunities\n6. Team collaboration improvements\n7. Next 30-day roadmap\n\nFormat as a structured CO report with clear action items and owners.",
        "options": {}
      },
      "id": "viren-master-analysis",
      "name": "Viren Master Analysis",
      "type": "n8n-nodes-base.openAiAssistant",
      "typeVersion": 1,
      "position": [850, 350],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "owner": "jamesrobert1231-collab",
        "repository": "Paradize",
        "title": "ðŸŽ¯ Master CO Report - {{$now.format('YYYY-MM-DD HH:mm')}}",
        "body": "={{$json.master_co_report}}\n\n---\n**Generated by Viren AI - Master CO Orchestrator**\n**Report Type**: Comprehensive Repository Analysis\n**Timestamp**: {{$now.format('YYYY-MM-DD HH:mm:ss')}}\n**Next Review**: {{$now.plus({hours: 24}).format('YYYY-MM-DD HH:mm')}}",
        "labels": ["master-co", "viren", "comprehensive-analysis", "orchestrator"]
      },
      "id": "create-master-report",
      "name": "Create Master CO Report",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [1050, 350],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "channel": "#co-master",
        "text": "=ðŸŽ¯ **Master CO Report - Viren AI**\n\n**Repository**: Paradize\n**Analysis Time**: {{$now.format('YYYY-MM-DD HH:mm')}}\n**Health Score**: {{$json.health_score}}/100\n**Priority Actions**: {{$json.priority_count}}\n\nðŸ“Š **Full Report**: {{$json.report_url}}\n\n**Key Insights**:\n{{$json.key_insights}}\n\n**Next Actions**:\n{{$json.next_actions}}",
        "options": {}
      },
      "id": "master-slack-alert",
      "name": "Master Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [1250, 350],
      "credentials": {
        "slackApi": {
          "id": "slack-credentials",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Master orchestrator data preparation\nconst repo = $json.repository || {};\nconst issues = $json.issues || [];\nconst prs = $json.pull_requests || [];\nconst infra = $json.prometheus_data || {};\n\n// Summarize issues\nconst issuesSummary = issues.map(issue => ({\n  title: issue.title,\n  labels: issue.labels.map(l => l.name),\n  created_at: issue.created_at,\n  updated_at: issue.updated_at\n}));\n\n// Summarize PRs\nconst prsSummary = prs.map(pr => ({\n  title: pr.title,\n  state: pr.state,\n  created_at: pr.created_at,\n  updated_at: pr.updated_at\n}));\n\n// Infrastructure health check\nconst infraHealth = infra.result && infra.result.length > 0 ? 'healthy' : 'degraded';\n\nreturn {\n  repository: repo,\n  issues_count: issues.length,\n  prs_count: prs.length,\n  issues_summary: issuesSummary,\n  prs_summary: prsSummary,\n  infrastructure_status: {\n    status: infraHealth,\n    data: infra\n  },\n  analysis_timestamp: new Date().toISOString()\n};"
      },
      "id": "prepare-master-data",
      "name": "Prepare Master Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 350]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.issues_count}}",
              "operation": "larger",
              "value2": 5
            }
          ]
        }
      },
      "id": "urgent-issues-check",
      "name": "Urgent Issues Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 500]
    },
    {
      "parameters": {
        "channel": "#co-urgent",
        "text": "=ðŸš¨ **URGENT CO Alert - Viren AI**\n\n**Repository**: Paradize\n**Critical Issues**: {{$json.issues_count}}\n**Immediate Action Required**\n\nðŸ“‹ **Master Report**: {{$json.report_url}}\n\n**Escalation**: @channel",
        "options": {}
      },
      "id": "urgent-slack-alert",
      "name": "Urgent Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [1050, 500],
      "credentials": {
        "slackApi": {
          "id": "slack-credentials",
          "name": "Slack API"
        }
      }
    }
  ],
  "connections": {
    "Master CO Trigger": {
      "main": [
        [
          {
            "node": "Get Repository Status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get All Active Issues",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Active PRs",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Infrastructure Health",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Repository Status": {
      "main": [
        [
          {
            "node": "Prepare Master Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Active Issues": {
      "main": [
        [
          {
            "node": "Prepare Master Data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Active PRs": {
      "main": [
        [
          {
            "node": "Prepare Master Data",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Check Infrastructure Health": {
      "main": [
        [
          {
            "node": "Prepare Master Data",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Prepare Master Data": {
      "main": [
        [
          {
            "node": "Viren Master Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Urgent Issues Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Viren Master Analysis": {
      "main": [
        [
          {
            "node": "Create Master CO Report",
            "type": "main",
            "index": 0
          },
          {
            "node": "Master Slack Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urgent Issues Check": {
      "main": [
        [
          {
            "node": "Urgent Slack Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "instanceId": "master-co-orchestrator"
  }
}
