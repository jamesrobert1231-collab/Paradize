{
  "name": "CO Workflow - Viren AI Assistant Integration",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "id": "trigger-node",
      "name": "CO Trigger - Every 15min",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "getMany",
        "owner": "={{$json.repository_owner}}",
        "repository": "={{$json.repository_name}}",
        "returnAll": false,
        "limit": 10,
        "state": "open",
        "labels": ["co", "viren", "ai-assistant"]
      },
      "id": "github-issues",
      "name": "Get CO Issues",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [450, 300],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "operation": "getRecentCommits",
        "owner": "={{$json.repository_owner}}",
        "repository": "={{$json.repository_name}}",
        "limit": 5
      },
      "id": "github-commits",
      "name": "Get Recent Commits",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [650, 200],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_viren_agent",
        "prompt": "=Analyze the following repository activity and provide CO recommendations:\n\nRecent Issues: {{JSON.stringify($json.issues)}}\nRecent Commits: {{JSON.stringify($json.commits)}}\n\nFocus on:\n1. Code quality improvements\n2. Security vulnerabilities\n3. Performance optimizations\n4. Documentation updates needed\n5. Test coverage gaps\n\nProvide specific actionable recommendations.",
        "options": {}
      },
      "id": "openai-assistant",
      "name": "Viren AI Analysis",
      "type": "n8n-nodes-base.openAiAssistant",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "owner": "={{$json.repository_owner}}",
        "repository": "={{$json.repository_name}}",
        "title": "CO Report - {{$now.format('YYYY-MM-DD HH:mm')}}",
        "body": "={{$json.ai_analysis}}\n\n**Generated by Viren AI Assistant**\n**Timestamp**: {{$now.format('YYYY-MM-DD HH:mm:ss')}}",
        "labels": ["co", "viren", "ai-assistant", "automated"]
      },
      "id": "create-co-issue",
      "name": "Create CO Issue",
      "type": "n8n-nodes-base.github",
      "typeVersion": 2,
      "position": [1050, 300],
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "channel": "#co-updates",
        "text": "=ðŸ¤– **Viren CO Report Generated**\n\n**Repository**: {{$json.repository_name}}\n**Time**: {{$now.format('YYYY-MM-DD HH:mm')}}\n**Issues Analyzed**: {{$json.issues_count}}\n**Commits Reviewed**: {{$json.commits_count}}\n\nðŸ“‹ **Action Items**: {{$json.co_issue_url}}",
        "options": {}
      },
      "id": "slack-notification",
      "name": "Slack CO Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [1250, 300],
      "credentials": {
        "slackApi": {
          "id": "slack-credentials",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.issues_count}}",
              "operation": "notEmpty"
            }
          ]
        }
      },
      "id": "filter-issues",
      "name": "Filter Issues",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 400]
    },
    {
      "parameters": {
        "functionCode": "// Prepare data for AI analysis\nconst issues = $json.items || [];\nconst commits = $json.commits || [];\n\nreturn {\n  issues: issues.map(issue => ({\n    title: issue.title,\n    body: issue.body,\n    labels: issue.labels.map(l => l.name),\n    state: issue.state,\n    created_at: issue.created_at,\n    updated_at: issue.updated_at\n  })),\n  commits: commits.map(commit => ({\n    message: commit.commit.message,\n    author: commit.commit.author.name,\n    date: commit.commit.author.date,\n    sha: commit.sha.substring(0, 7)\n  })),\n  issues_count: issues.length,\n  commits_count: commits.length,\n  repository_owner: 'jamesrobert1231-collab',\n  repository_name: 'Paradize'\n};"
      },
      "id": "prepare-data",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 300]
    }
  ],
  "connections": {
    "CO Trigger - Every 15min": {
      "main": [
        [
          {
            "node": "Get CO Issues",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Recent Commits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get CO Issues": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Recent Commits": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "Viren AI Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Viren AI Analysis": {
      "main": [
        [
          {
            "node": "Create CO Issue",
            "type": "main",
            "index": 0
          },
          {
            "node": "Slack CO Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "instanceId": "co-workflow-viren"
  }
}
